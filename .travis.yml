language: nix
nix: 2.2.2

sudo: false

env:
  global:
  - CACHIX_CACHE=bb010g
  - NUR_REPO=bb010g
  - BUILD_UNFREE=true

install:
- >
  mkdir -p "${XDG_CONFIG_DIR:-$HOME/.config}/nixpkgs" &&
  echo "{ allowUnfree = ${BUILD_UNFREE}; sandbox = true; }" > "${XDG_CONFIG_DIR:-$HOME/.config}/nixpkgs/config.nix"
- nix --version
- if [ -n "${CACHIX_CACHE}" ]; then travis_retry nix-channel --update; fi
- if [ -n "${CACHIX_CACHE}" ]; then nix-env -iA cachix -f https://cachix.org/api/v1/install; fi
- if [ -n "${CACHIX_CACHE}" ]; then cachix use "${CACHIX_CACHE}"; fi
- nix-channel --add "${NIX_CHANNEL}" nixpkgs
- travis_retry nix-channel --update

script:
- |
  function sortDrvs() {
    typeset IFS=$'\n' drvs='' drv=''
    drvs=$( \
      nix-instantiate --show-trace --arg buildUnfree "${BUILD_UNFREE}" \
        "$@" | \
      cut -d '!' -f 1 | uniq | sort \
    )
    for drv in $drvs; do
      nix-store -q --graph -- "$drv" | \
        sed -e '1d; $d' -e 's/ \[.*\];$//' \
          -e 's/^"\(\([^"\\]\|\\"\)*\)"$/"\1" -> "\1"/' \
          -e 's/^"\(\([^"\\]\|\\"\)*\)" -> "\(\([^"\\]\|\\"\)*\)"$/\3 \1/'
    done | tsort | grep -xFf - <(printf '%s' "$drvs") || true
  }
  function nixBuildDrv() {
    printf '\n%s\n' "building $1 (all outputs if possible)"
    typeset paths='' s=''
    paths=$(nix-build --show-trace -E \
      '{drv}: let d = import drv; in d.all or d' --argstr drv "$@")
    s=$?; if [[ "$s" != 0 ]]; then return "$s"; fi
    if [[ -n "${CACHIX_CACHE}" ]]; then
      <<< "$paths" cachix push "${CACHIX_CACHE}"
      s=$?; if [[ "$s" != 0 ]]; then return "$s"; fi
    fi
  }
  function nixBuildDrvs() {
    typeset s=''
    while IFS='' read -r drv; do
      nixBuildDrv "$drv"
      s=$?; if [[ "$s" != 0 ]]; then return "$s"; fi
    done
  }
- sortDrvs ./ci.nix -A cacheOutputs | nixBuildDrvs
- sortDrvs ./ci.nix -A buildOutputs | CACHIX_CACHE='' nixBuildDrvs
- nix eval -f ./default.nix 'lib'
- nix eval -f ./default.nix 'modules'
- nix eval -f ./default.nix 'overlays'

jobs:
  include:
  - name: 'nixpkgs-unstable'
    env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-unstable
  - name: 'nixos-unstable (bb010g)'
    env: NIX_CHANNEL=https://github.com/bb010g/nixpkgs/archive/bb010g-nixos-unstable.tar.gz
  - name: 'nixos-unstable'
    env: NIX_CHANNEL=https://nixos.org/channels/nixos-unstable
  - name: 'nixos-19.03'
    env: NIX_CHANNEL=https://nixos.org/channels/nixos-19.03
  - stage: deploy
    name: "Notify NUR"
    if: 'type NOT IN (pull_request, cron) AND branch IN (master)'
    install:
    script:
    - curl -XPOST "https://nur-update.herokuapp.com/update?repo=${NUR_REPO}"

# vim:et:sw=2
